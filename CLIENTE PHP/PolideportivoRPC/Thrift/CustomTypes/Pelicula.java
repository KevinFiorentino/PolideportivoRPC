/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ejemplo;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-10-15")
public class Pelicula implements org.apache.thrift.TBase<Pelicula, Pelicula._Fields>, java.io.Serializable, Cloneable, Comparable<Pelicula> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Pelicula");

  private static final org.apache.thrift.protocol.TField TITULO_FIELD_DESC = new org.apache.thrift.protocol.TField("titulo", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FECHA_FIELD_DESC = new org.apache.thrift.protocol.TField("fecha", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField IDIOMA_FIELD_DESC = new org.apache.thrift.protocol.TField("idioma", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PeliculaStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PeliculaTupleSchemeFactory();

  public java.lang.String titulo; // required
  public java.lang.String descripcion; // required
  public Fecha fecha; // required
  public java.lang.String idioma; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TITULO((short)1, "titulo"),
    DESCRIPCION((short)2, "descripcion"),
    FECHA((short)3, "fecha"),
    IDIOMA((short)4, "idioma");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TITULO
          return TITULO;
        case 2: // DESCRIPCION
          return DESCRIPCION;
        case 3: // FECHA
          return FECHA;
        case 4: // IDIOMA
          return IDIOMA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TITULO, new org.apache.thrift.meta_data.FieldMetaData("titulo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA, new org.apache.thrift.meta_data.FieldMetaData("fecha", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Fecha.class)));
    tmpMap.put(_Fields.IDIOMA, new org.apache.thrift.meta_data.FieldMetaData("idioma", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Pelicula.class, metaDataMap);
  }

  public Pelicula() {
  }

  public Pelicula(
    java.lang.String titulo,
    java.lang.String descripcion,
    Fecha fecha,
    java.lang.String idioma)
  {
    this();
    this.titulo = titulo;
    this.descripcion = descripcion;
    this.fecha = fecha;
    this.idioma = idioma;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Pelicula(Pelicula other) {
    if (other.isSetTitulo()) {
      this.titulo = other.titulo;
    }
    if (other.isSetDescripcion()) {
      this.descripcion = other.descripcion;
    }
    if (other.isSetFecha()) {
      this.fecha = new Fecha(other.fecha);
    }
    if (other.isSetIdioma()) {
      this.idioma = other.idioma;
    }
  }

  public Pelicula deepCopy() {
    return new Pelicula(this);
  }

  @Override
  public void clear() {
    this.titulo = null;
    this.descripcion = null;
    this.fecha = null;
    this.idioma = null;
  }

  public java.lang.String getTitulo() {
    return this.titulo;
  }

  public Pelicula setTitulo(java.lang.String titulo) {
    this.titulo = titulo;
    return this;
  }

  public void unsetTitulo() {
    this.titulo = null;
  }

  /** Returns true if field titulo is set (has been assigned a value) and false otherwise */
  public boolean isSetTitulo() {
    return this.titulo != null;
  }

  public void setTituloIsSet(boolean value) {
    if (!value) {
      this.titulo = null;
    }
  }

  public java.lang.String getDescripcion() {
    return this.descripcion;
  }

  public Pelicula setDescripcion(java.lang.String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

  public void unsetDescripcion() {
    this.descripcion = null;
  }

  /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
  public boolean isSetDescripcion() {
    return this.descripcion != null;
  }

  public void setDescripcionIsSet(boolean value) {
    if (!value) {
      this.descripcion = null;
    }
  }

  public Fecha getFecha() {
    return this.fecha;
  }

  public Pelicula setFecha(Fecha fecha) {
    this.fecha = fecha;
    return this;
  }

  public void unsetFecha() {
    this.fecha = null;
  }

  /** Returns true if field fecha is set (has been assigned a value) and false otherwise */
  public boolean isSetFecha() {
    return this.fecha != null;
  }

  public void setFechaIsSet(boolean value) {
    if (!value) {
      this.fecha = null;
    }
  }

  public java.lang.String getIdioma() {
    return this.idioma;
  }

  public Pelicula setIdioma(java.lang.String idioma) {
    this.idioma = idioma;
    return this;
  }

  public void unsetIdioma() {
    this.idioma = null;
  }

  /** Returns true if field idioma is set (has been assigned a value) and false otherwise */
  public boolean isSetIdioma() {
    return this.idioma != null;
  }

  public void setIdiomaIsSet(boolean value) {
    if (!value) {
      this.idioma = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case TITULO:
      if (value == null) {
        unsetTitulo();
      } else {
        setTitulo((java.lang.String)value);
      }
      break;

    case DESCRIPCION:
      if (value == null) {
        unsetDescripcion();
      } else {
        setDescripcion((java.lang.String)value);
      }
      break;

    case FECHA:
      if (value == null) {
        unsetFecha();
      } else {
        setFecha((Fecha)value);
      }
      break;

    case IDIOMA:
      if (value == null) {
        unsetIdioma();
      } else {
        setIdioma((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TITULO:
      return getTitulo();

    case DESCRIPCION:
      return getDescripcion();

    case FECHA:
      return getFecha();

    case IDIOMA:
      return getIdioma();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TITULO:
      return isSetTitulo();
    case DESCRIPCION:
      return isSetDescripcion();
    case FECHA:
      return isSetFecha();
    case IDIOMA:
      return isSetIdioma();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Pelicula)
      return this.equals((Pelicula)that);
    return false;
  }

  public boolean equals(Pelicula that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_titulo = true && this.isSetTitulo();
    boolean that_present_titulo = true && that.isSetTitulo();
    if (this_present_titulo || that_present_titulo) {
      if (!(this_present_titulo && that_present_titulo))
        return false;
      if (!this.titulo.equals(that.titulo))
        return false;
    }

    boolean this_present_descripcion = true && this.isSetDescripcion();
    boolean that_present_descripcion = true && that.isSetDescripcion();
    if (this_present_descripcion || that_present_descripcion) {
      if (!(this_present_descripcion && that_present_descripcion))
        return false;
      if (!this.descripcion.equals(that.descripcion))
        return false;
    }

    boolean this_present_fecha = true && this.isSetFecha();
    boolean that_present_fecha = true && that.isSetFecha();
    if (this_present_fecha || that_present_fecha) {
      if (!(this_present_fecha && that_present_fecha))
        return false;
      if (!this.fecha.equals(that.fecha))
        return false;
    }

    boolean this_present_idioma = true && this.isSetIdioma();
    boolean that_present_idioma = true && that.isSetIdioma();
    if (this_present_idioma || that_present_idioma) {
      if (!(this_present_idioma && that_present_idioma))
        return false;
      if (!this.idioma.equals(that.idioma))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetTitulo()) ? 131071 : 524287);
    if (isSetTitulo())
      hashCode = hashCode * 8191 + titulo.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescripcion()) ? 131071 : 524287);
    if (isSetDescripcion())
      hashCode = hashCode * 8191 + descripcion.hashCode();

    hashCode = hashCode * 8191 + ((isSetFecha()) ? 131071 : 524287);
    if (isSetFecha())
      hashCode = hashCode * 8191 + fecha.hashCode();

    hashCode = hashCode * 8191 + ((isSetIdioma()) ? 131071 : 524287);
    if (isSetIdioma())
      hashCode = hashCode * 8191 + idioma.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Pelicula other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetTitulo()).compareTo(other.isSetTitulo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitulo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.titulo, other.titulo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescripcion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFecha()).compareTo(other.isSetFecha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFecha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fecha, other.fecha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdioma()).compareTo(other.isSetIdioma());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdioma()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idioma, other.idioma);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Pelicula(");
    boolean first = true;

    sb.append("titulo:");
    if (this.titulo == null) {
      sb.append("null");
    } else {
      sb.append(this.titulo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descripcion:");
    if (this.descripcion == null) {
      sb.append("null");
    } else {
      sb.append(this.descripcion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fecha:");
    if (this.fecha == null) {
      sb.append("null");
    } else {
      sb.append(this.fecha);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idioma:");
    if (this.idioma == null) {
      sb.append("null");
    } else {
      sb.append(this.idioma);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (fecha != null) {
      fecha.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PeliculaStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PeliculaStandardScheme getScheme() {
      return new PeliculaStandardScheme();
    }
  }

  private static class PeliculaStandardScheme extends org.apache.thrift.scheme.StandardScheme<Pelicula> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Pelicula struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TITULO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.titulo = iprot.readString();
              struct.setTituloIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DESCRIPCION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descripcion = iprot.readString();
              struct.setDescripcionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FECHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fecha = new Fecha();
              struct.fecha.read(iprot);
              struct.setFechaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IDIOMA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.idioma = iprot.readString();
              struct.setIdiomaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Pelicula struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.titulo != null) {
        oprot.writeFieldBegin(TITULO_FIELD_DESC);
        oprot.writeString(struct.titulo);
        oprot.writeFieldEnd();
      }
      if (struct.descripcion != null) {
        oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
        oprot.writeString(struct.descripcion);
        oprot.writeFieldEnd();
      }
      if (struct.fecha != null) {
        oprot.writeFieldBegin(FECHA_FIELD_DESC);
        struct.fecha.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.idioma != null) {
        oprot.writeFieldBegin(IDIOMA_FIELD_DESC);
        oprot.writeString(struct.idioma);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PeliculaTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PeliculaTupleScheme getScheme() {
      return new PeliculaTupleScheme();
    }
  }

  private static class PeliculaTupleScheme extends org.apache.thrift.scheme.TupleScheme<Pelicula> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Pelicula struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetTitulo()) {
        optionals.set(0);
      }
      if (struct.isSetDescripcion()) {
        optionals.set(1);
      }
      if (struct.isSetFecha()) {
        optionals.set(2);
      }
      if (struct.isSetIdioma()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetTitulo()) {
        oprot.writeString(struct.titulo);
      }
      if (struct.isSetDescripcion()) {
        oprot.writeString(struct.descripcion);
      }
      if (struct.isSetFecha()) {
        struct.fecha.write(oprot);
      }
      if (struct.isSetIdioma()) {
        oprot.writeString(struct.idioma);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Pelicula struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.titulo = iprot.readString();
        struct.setTituloIsSet(true);
      }
      if (incoming.get(1)) {
        struct.descripcion = iprot.readString();
        struct.setDescripcionIsSet(true);
      }
      if (incoming.get(2)) {
        struct.fecha = new Fecha();
        struct.fecha.read(iprot);
        struct.setFechaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.idioma = iprot.readString();
        struct.setIdiomaIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

