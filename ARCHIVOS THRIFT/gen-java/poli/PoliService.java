/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package poli;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-12")
public class PoliService {

  public interface Iface {

    public Turno traerTurnoPorId(int idTurno) throws org.apache.thrift.TException;

    public java.util.List<Turno> traerTurnosPorFilial(int idFilial) throws org.apache.thrift.TException;

    public java.lang.String traerTelefonoPorUsuario(java.lang.String apellido, java.lang.String nombre) throws NoEncontrado, org.apache.thrift.TException;

    public Cancha traerCanchaPorId(int idCancha) throws org.apache.thrift.TException;

    public java.util.List<Cancha> traerCanchasPorDeporte(java.lang.String deporte) throws org.apache.thrift.TException;

    public java.lang.String traerLocalidadPorFilial(int idFilial) throws CampoVacio, org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void traerTurnoPorId(int idTurno, org.apache.thrift.async.AsyncMethodCallback<Turno> resultHandler) throws org.apache.thrift.TException;

    public void traerTurnosPorFilial(int idFilial, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Turno>> resultHandler) throws org.apache.thrift.TException;

    public void traerTelefonoPorUsuario(java.lang.String apellido, java.lang.String nombre, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void traerCanchaPorId(int idCancha, org.apache.thrift.async.AsyncMethodCallback<Cancha> resultHandler) throws org.apache.thrift.TException;

    public void traerCanchasPorDeporte(java.lang.String deporte, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Cancha>> resultHandler) throws org.apache.thrift.TException;

    public void traerLocalidadPorFilial(int idFilial, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public Turno traerTurnoPorId(int idTurno) throws org.apache.thrift.TException
    {
      send_traerTurnoPorId(idTurno);
      return recv_traerTurnoPorId();
    }

    public void send_traerTurnoPorId(int idTurno) throws org.apache.thrift.TException
    {
      traerTurnoPorId_args args = new traerTurnoPorId_args();
      args.setIdTurno(idTurno);
      sendBase("traerTurnoPorId", args);
    }

    public Turno recv_traerTurnoPorId() throws org.apache.thrift.TException
    {
      traerTurnoPorId_result result = new traerTurnoPorId_result();
      receiveBase(result, "traerTurnoPorId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "traerTurnoPorId failed: unknown result");
    }

    public java.util.List<Turno> traerTurnosPorFilial(int idFilial) throws org.apache.thrift.TException
    {
      send_traerTurnosPorFilial(idFilial);
      return recv_traerTurnosPorFilial();
    }

    public void send_traerTurnosPorFilial(int idFilial) throws org.apache.thrift.TException
    {
      traerTurnosPorFilial_args args = new traerTurnosPorFilial_args();
      args.setIdFilial(idFilial);
      sendBase("traerTurnosPorFilial", args);
    }

    public java.util.List<Turno> recv_traerTurnosPorFilial() throws org.apache.thrift.TException
    {
      traerTurnosPorFilial_result result = new traerTurnosPorFilial_result();
      receiveBase(result, "traerTurnosPorFilial");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "traerTurnosPorFilial failed: unknown result");
    }

    public java.lang.String traerTelefonoPorUsuario(java.lang.String apellido, java.lang.String nombre) throws NoEncontrado, org.apache.thrift.TException
    {
      send_traerTelefonoPorUsuario(apellido, nombre);
      return recv_traerTelefonoPorUsuario();
    }

    public void send_traerTelefonoPorUsuario(java.lang.String apellido, java.lang.String nombre) throws org.apache.thrift.TException
    {
      traerTelefonoPorUsuario_args args = new traerTelefonoPorUsuario_args();
      args.setApellido(apellido);
      args.setNombre(nombre);
      sendBase("traerTelefonoPorUsuario", args);
    }

    public java.lang.String recv_traerTelefonoPorUsuario() throws NoEncontrado, org.apache.thrift.TException
    {
      traerTelefonoPorUsuario_result result = new traerTelefonoPorUsuario_result();
      receiveBase(result, "traerTelefonoPorUsuario");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.noEncontrado != null) {
        throw result.noEncontrado;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "traerTelefonoPorUsuario failed: unknown result");
    }

    public Cancha traerCanchaPorId(int idCancha) throws org.apache.thrift.TException
    {
      send_traerCanchaPorId(idCancha);
      return recv_traerCanchaPorId();
    }

    public void send_traerCanchaPorId(int idCancha) throws org.apache.thrift.TException
    {
      traerCanchaPorId_args args = new traerCanchaPorId_args();
      args.setIdCancha(idCancha);
      sendBase("traerCanchaPorId", args);
    }

    public Cancha recv_traerCanchaPorId() throws org.apache.thrift.TException
    {
      traerCanchaPorId_result result = new traerCanchaPorId_result();
      receiveBase(result, "traerCanchaPorId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "traerCanchaPorId failed: unknown result");
    }

    public java.util.List<Cancha> traerCanchasPorDeporte(java.lang.String deporte) throws org.apache.thrift.TException
    {
      send_traerCanchasPorDeporte(deporte);
      return recv_traerCanchasPorDeporte();
    }

    public void send_traerCanchasPorDeporte(java.lang.String deporte) throws org.apache.thrift.TException
    {
      traerCanchasPorDeporte_args args = new traerCanchasPorDeporte_args();
      args.setDeporte(deporte);
      sendBase("traerCanchasPorDeporte", args);
    }

    public java.util.List<Cancha> recv_traerCanchasPorDeporte() throws org.apache.thrift.TException
    {
      traerCanchasPorDeporte_result result = new traerCanchasPorDeporte_result();
      receiveBase(result, "traerCanchasPorDeporte");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "traerCanchasPorDeporte failed: unknown result");
    }

    public java.lang.String traerLocalidadPorFilial(int idFilial) throws CampoVacio, org.apache.thrift.TException
    {
      send_traerLocalidadPorFilial(idFilial);
      return recv_traerLocalidadPorFilial();
    }

    public void send_traerLocalidadPorFilial(int idFilial) throws org.apache.thrift.TException
    {
      traerLocalidadPorFilial_args args = new traerLocalidadPorFilial_args();
      args.setIdFilial(idFilial);
      sendBase("traerLocalidadPorFilial", args);
    }

    public java.lang.String recv_traerLocalidadPorFilial() throws CampoVacio, org.apache.thrift.TException
    {
      traerLocalidadPorFilial_result result = new traerLocalidadPorFilial_result();
      receiveBase(result, "traerLocalidadPorFilial");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.campoVacio != null) {
        throw result.campoVacio;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "traerLocalidadPorFilial failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void traerTurnoPorId(int idTurno, org.apache.thrift.async.AsyncMethodCallback<Turno> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      traerTurnoPorId_call method_call = new traerTurnoPorId_call(idTurno, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class traerTurnoPorId_call extends org.apache.thrift.async.TAsyncMethodCall<Turno> {
      private int idTurno;
      public traerTurnoPorId_call(int idTurno, org.apache.thrift.async.AsyncMethodCallback<Turno> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idTurno = idTurno;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("traerTurnoPorId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        traerTurnoPorId_args args = new traerTurnoPorId_args();
        args.setIdTurno(idTurno);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Turno getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_traerTurnoPorId();
      }
    }

    public void traerTurnosPorFilial(int idFilial, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Turno>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      traerTurnosPorFilial_call method_call = new traerTurnosPorFilial_call(idFilial, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class traerTurnosPorFilial_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Turno>> {
      private int idFilial;
      public traerTurnosPorFilial_call(int idFilial, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Turno>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idFilial = idFilial;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("traerTurnosPorFilial", org.apache.thrift.protocol.TMessageType.CALL, 0));
        traerTurnosPorFilial_args args = new traerTurnosPorFilial_args();
        args.setIdFilial(idFilial);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Turno> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_traerTurnosPorFilial();
      }
    }

    public void traerTelefonoPorUsuario(java.lang.String apellido, java.lang.String nombre, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      traerTelefonoPorUsuario_call method_call = new traerTelefonoPorUsuario_call(apellido, nombre, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class traerTelefonoPorUsuario_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private java.lang.String apellido;
      private java.lang.String nombre;
      public traerTelefonoPorUsuario_call(java.lang.String apellido, java.lang.String nombre, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.apellido = apellido;
        this.nombre = nombre;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("traerTelefonoPorUsuario", org.apache.thrift.protocol.TMessageType.CALL, 0));
        traerTelefonoPorUsuario_args args = new traerTelefonoPorUsuario_args();
        args.setApellido(apellido);
        args.setNombre(nombre);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws NoEncontrado, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_traerTelefonoPorUsuario();
      }
    }

    public void traerCanchaPorId(int idCancha, org.apache.thrift.async.AsyncMethodCallback<Cancha> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      traerCanchaPorId_call method_call = new traerCanchaPorId_call(idCancha, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class traerCanchaPorId_call extends org.apache.thrift.async.TAsyncMethodCall<Cancha> {
      private int idCancha;
      public traerCanchaPorId_call(int idCancha, org.apache.thrift.async.AsyncMethodCallback<Cancha> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idCancha = idCancha;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("traerCanchaPorId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        traerCanchaPorId_args args = new traerCanchaPorId_args();
        args.setIdCancha(idCancha);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Cancha getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_traerCanchaPorId();
      }
    }

    public void traerCanchasPorDeporte(java.lang.String deporte, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Cancha>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      traerCanchasPorDeporte_call method_call = new traerCanchasPorDeporte_call(deporte, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class traerCanchasPorDeporte_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Cancha>> {
      private java.lang.String deporte;
      public traerCanchasPorDeporte_call(java.lang.String deporte, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Cancha>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.deporte = deporte;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("traerCanchasPorDeporte", org.apache.thrift.protocol.TMessageType.CALL, 0));
        traerCanchasPorDeporte_args args = new traerCanchasPorDeporte_args();
        args.setDeporte(deporte);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Cancha> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_traerCanchasPorDeporte();
      }
    }

    public void traerLocalidadPorFilial(int idFilial, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      traerLocalidadPorFilial_call method_call = new traerLocalidadPorFilial_call(idFilial, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class traerLocalidadPorFilial_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private int idFilial;
      public traerLocalidadPorFilial_call(int idFilial, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idFilial = idFilial;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("traerLocalidadPorFilial", org.apache.thrift.protocol.TMessageType.CALL, 0));
        traerLocalidadPorFilial_args args = new traerLocalidadPorFilial_args();
        args.setIdFilial(idFilial);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws CampoVacio, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_traerLocalidadPorFilial();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("traerTurnoPorId", new traerTurnoPorId());
      processMap.put("traerTurnosPorFilial", new traerTurnosPorFilial());
      processMap.put("traerTelefonoPorUsuario", new traerTelefonoPorUsuario());
      processMap.put("traerCanchaPorId", new traerCanchaPorId());
      processMap.put("traerCanchasPorDeporte", new traerCanchasPorDeporte());
      processMap.put("traerLocalidadPorFilial", new traerLocalidadPorFilial());
      return processMap;
    }

    public static class traerTurnoPorId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, traerTurnoPorId_args> {
      public traerTurnoPorId() {
        super("traerTurnoPorId");
      }

      public traerTurnoPorId_args getEmptyArgsInstance() {
        return new traerTurnoPorId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public traerTurnoPorId_result getResult(I iface, traerTurnoPorId_args args) throws org.apache.thrift.TException {
        traerTurnoPorId_result result = new traerTurnoPorId_result();
        result.success = iface.traerTurnoPorId(args.idTurno);
        return result;
      }
    }

    public static class traerTurnosPorFilial<I extends Iface> extends org.apache.thrift.ProcessFunction<I, traerTurnosPorFilial_args> {
      public traerTurnosPorFilial() {
        super("traerTurnosPorFilial");
      }

      public traerTurnosPorFilial_args getEmptyArgsInstance() {
        return new traerTurnosPorFilial_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public traerTurnosPorFilial_result getResult(I iface, traerTurnosPorFilial_args args) throws org.apache.thrift.TException {
        traerTurnosPorFilial_result result = new traerTurnosPorFilial_result();
        result.success = iface.traerTurnosPorFilial(args.idFilial);
        return result;
      }
    }

    public static class traerTelefonoPorUsuario<I extends Iface> extends org.apache.thrift.ProcessFunction<I, traerTelefonoPorUsuario_args> {
      public traerTelefonoPorUsuario() {
        super("traerTelefonoPorUsuario");
      }

      public traerTelefonoPorUsuario_args getEmptyArgsInstance() {
        return new traerTelefonoPorUsuario_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public traerTelefonoPorUsuario_result getResult(I iface, traerTelefonoPorUsuario_args args) throws org.apache.thrift.TException {
        traerTelefonoPorUsuario_result result = new traerTelefonoPorUsuario_result();
        try {
          result.success = iface.traerTelefonoPorUsuario(args.apellido, args.nombre);
        } catch (NoEncontrado noEncontrado) {
          result.noEncontrado = noEncontrado;
        }
        return result;
      }
    }

    public static class traerCanchaPorId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, traerCanchaPorId_args> {
      public traerCanchaPorId() {
        super("traerCanchaPorId");
      }

      public traerCanchaPorId_args getEmptyArgsInstance() {
        return new traerCanchaPorId_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public traerCanchaPorId_result getResult(I iface, traerCanchaPorId_args args) throws org.apache.thrift.TException {
        traerCanchaPorId_result result = new traerCanchaPorId_result();
        result.success = iface.traerCanchaPorId(args.idCancha);
        return result;
      }
    }

    public static class traerCanchasPorDeporte<I extends Iface> extends org.apache.thrift.ProcessFunction<I, traerCanchasPorDeporte_args> {
      public traerCanchasPorDeporte() {
        super("traerCanchasPorDeporte");
      }

      public traerCanchasPorDeporte_args getEmptyArgsInstance() {
        return new traerCanchasPorDeporte_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public traerCanchasPorDeporte_result getResult(I iface, traerCanchasPorDeporte_args args) throws org.apache.thrift.TException {
        traerCanchasPorDeporte_result result = new traerCanchasPorDeporte_result();
        result.success = iface.traerCanchasPorDeporte(args.deporte);
        return result;
      }
    }

    public static class traerLocalidadPorFilial<I extends Iface> extends org.apache.thrift.ProcessFunction<I, traerLocalidadPorFilial_args> {
      public traerLocalidadPorFilial() {
        super("traerLocalidadPorFilial");
      }

      public traerLocalidadPorFilial_args getEmptyArgsInstance() {
        return new traerLocalidadPorFilial_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public traerLocalidadPorFilial_result getResult(I iface, traerLocalidadPorFilial_args args) throws org.apache.thrift.TException {
        traerLocalidadPorFilial_result result = new traerLocalidadPorFilial_result();
        try {
          result.success = iface.traerLocalidadPorFilial(args.idFilial);
        } catch (CampoVacio campoVacio) {
          result.campoVacio = campoVacio;
        }
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("traerTurnoPorId", new traerTurnoPorId());
      processMap.put("traerTurnosPorFilial", new traerTurnosPorFilial());
      processMap.put("traerTelefonoPorUsuario", new traerTelefonoPorUsuario());
      processMap.put("traerCanchaPorId", new traerCanchaPorId());
      processMap.put("traerCanchasPorDeporte", new traerCanchasPorDeporte());
      processMap.put("traerLocalidadPorFilial", new traerLocalidadPorFilial());
      return processMap;
    }

    public static class traerTurnoPorId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, traerTurnoPorId_args, Turno> {
      public traerTurnoPorId() {
        super("traerTurnoPorId");
      }

      public traerTurnoPorId_args getEmptyArgsInstance() {
        return new traerTurnoPorId_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Turno> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Turno>() { 
          public void onComplete(Turno o) {
            traerTurnoPorId_result result = new traerTurnoPorId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            traerTurnoPorId_result result = new traerTurnoPorId_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, traerTurnoPorId_args args, org.apache.thrift.async.AsyncMethodCallback<Turno> resultHandler) throws org.apache.thrift.TException {
        iface.traerTurnoPorId(args.idTurno,resultHandler);
      }
    }

    public static class traerTurnosPorFilial<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, traerTurnosPorFilial_args, java.util.List<Turno>> {
      public traerTurnosPorFilial() {
        super("traerTurnosPorFilial");
      }

      public traerTurnosPorFilial_args getEmptyArgsInstance() {
        return new traerTurnosPorFilial_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Turno>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Turno>>() { 
          public void onComplete(java.util.List<Turno> o) {
            traerTurnosPorFilial_result result = new traerTurnosPorFilial_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            traerTurnosPorFilial_result result = new traerTurnosPorFilial_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, traerTurnosPorFilial_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Turno>> resultHandler) throws org.apache.thrift.TException {
        iface.traerTurnosPorFilial(args.idFilial,resultHandler);
      }
    }

    public static class traerTelefonoPorUsuario<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, traerTelefonoPorUsuario_args, java.lang.String> {
      public traerTelefonoPorUsuario() {
        super("traerTelefonoPorUsuario");
      }

      public traerTelefonoPorUsuario_args getEmptyArgsInstance() {
        return new traerTelefonoPorUsuario_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            traerTelefonoPorUsuario_result result = new traerTelefonoPorUsuario_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            traerTelefonoPorUsuario_result result = new traerTelefonoPorUsuario_result();
            if (e instanceof NoEncontrado) {
              result.noEncontrado = (NoEncontrado) e;
              result.setNoEncontradoIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, traerTelefonoPorUsuario_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.traerTelefonoPorUsuario(args.apellido, args.nombre,resultHandler);
      }
    }

    public static class traerCanchaPorId<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, traerCanchaPorId_args, Cancha> {
      public traerCanchaPorId() {
        super("traerCanchaPorId");
      }

      public traerCanchaPorId_args getEmptyArgsInstance() {
        return new traerCanchaPorId_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Cancha> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Cancha>() { 
          public void onComplete(Cancha o) {
            traerCanchaPorId_result result = new traerCanchaPorId_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            traerCanchaPorId_result result = new traerCanchaPorId_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, traerCanchaPorId_args args, org.apache.thrift.async.AsyncMethodCallback<Cancha> resultHandler) throws org.apache.thrift.TException {
        iface.traerCanchaPorId(args.idCancha,resultHandler);
      }
    }

    public static class traerCanchasPorDeporte<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, traerCanchasPorDeporte_args, java.util.List<Cancha>> {
      public traerCanchasPorDeporte() {
        super("traerCanchasPorDeporte");
      }

      public traerCanchasPorDeporte_args getEmptyArgsInstance() {
        return new traerCanchasPorDeporte_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Cancha>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Cancha>>() { 
          public void onComplete(java.util.List<Cancha> o) {
            traerCanchasPorDeporte_result result = new traerCanchasPorDeporte_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            traerCanchasPorDeporte_result result = new traerCanchasPorDeporte_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, traerCanchasPorDeporte_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Cancha>> resultHandler) throws org.apache.thrift.TException {
        iface.traerCanchasPorDeporte(args.deporte,resultHandler);
      }
    }

    public static class traerLocalidadPorFilial<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, traerLocalidadPorFilial_args, java.lang.String> {
      public traerLocalidadPorFilial() {
        super("traerLocalidadPorFilial");
      }

      public traerLocalidadPorFilial_args getEmptyArgsInstance() {
        return new traerLocalidadPorFilial_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            traerLocalidadPorFilial_result result = new traerLocalidadPorFilial_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            traerLocalidadPorFilial_result result = new traerLocalidadPorFilial_result();
            if (e instanceof CampoVacio) {
              result.campoVacio = (CampoVacio) e;
              result.setCampoVacioIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, traerLocalidadPorFilial_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.traerLocalidadPorFilial(args.idFilial,resultHandler);
      }
    }

  }

  public static class traerTurnoPorId_args implements org.apache.thrift.TBase<traerTurnoPorId_args, traerTurnoPorId_args._Fields>, java.io.Serializable, Cloneable, Comparable<traerTurnoPorId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerTurnoPorId_args");

    private static final org.apache.thrift.protocol.TField ID_TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("idTurno", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerTurnoPorId_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerTurnoPorId_argsTupleSchemeFactory();

    public int idTurno; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_TURNO((short)1, "idTurno");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_TURNO
            return ID_TURNO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __IDTURNO_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_TURNO, new org.apache.thrift.meta_data.FieldMetaData("idTurno", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerTurnoPorId_args.class, metaDataMap);
    }

    public traerTurnoPorId_args() {
    }

    public traerTurnoPorId_args(
      int idTurno)
    {
      this();
      this.idTurno = idTurno;
      setIdTurnoIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerTurnoPorId_args(traerTurnoPorId_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.idTurno = other.idTurno;
    }

    public traerTurnoPorId_args deepCopy() {
      return new traerTurnoPorId_args(this);
    }

    @Override
    public void clear() {
      setIdTurnoIsSet(false);
      this.idTurno = 0;
    }

    public int getIdTurno() {
      return this.idTurno;
    }

    public traerTurnoPorId_args setIdTurno(int idTurno) {
      this.idTurno = idTurno;
      setIdTurnoIsSet(true);
      return this;
    }

    public void unsetIdTurno() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDTURNO_ISSET_ID);
    }

    /** Returns true if field idTurno is set (has been assigned a value) and false otherwise */
    public boolean isSetIdTurno() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDTURNO_ISSET_ID);
    }

    public void setIdTurnoIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDTURNO_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_TURNO:
        if (value == null) {
          unsetIdTurno();
        } else {
          setIdTurno((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_TURNO:
        return getIdTurno();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_TURNO:
        return isSetIdTurno();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerTurnoPorId_args)
        return this.equals((traerTurnoPorId_args)that);
      return false;
    }

    public boolean equals(traerTurnoPorId_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idTurno = true;
      boolean that_present_idTurno = true;
      if (this_present_idTurno || that_present_idTurno) {
        if (!(this_present_idTurno && that_present_idTurno))
          return false;
        if (this.idTurno != that.idTurno)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + idTurno;

      return hashCode;
    }

    @Override
    public int compareTo(traerTurnoPorId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdTurno()).compareTo(other.isSetIdTurno());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdTurno()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idTurno, other.idTurno);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerTurnoPorId_args(");
      boolean first = true;

      sb.append("idTurno:");
      sb.append(this.idTurno);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerTurnoPorId_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnoPorId_argsStandardScheme getScheme() {
        return new traerTurnoPorId_argsStandardScheme();
      }
    }

    private static class traerTurnoPorId_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerTurnoPorId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerTurnoPorId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_TURNO
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.idTurno = iprot.readI32();
                struct.setIdTurnoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerTurnoPorId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ID_TURNO_FIELD_DESC);
        oprot.writeI32(struct.idTurno);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerTurnoPorId_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnoPorId_argsTupleScheme getScheme() {
        return new traerTurnoPorId_argsTupleScheme();
      }
    }

    private static class traerTurnoPorId_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerTurnoPorId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerTurnoPorId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdTurno()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetIdTurno()) {
          oprot.writeI32(struct.idTurno);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerTurnoPorId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.idTurno = iprot.readI32();
          struct.setIdTurnoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerTurnoPorId_result implements org.apache.thrift.TBase<traerTurnoPorId_result, traerTurnoPorId_result._Fields>, java.io.Serializable, Cloneable, Comparable<traerTurnoPorId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerTurnoPorId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerTurnoPorId_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerTurnoPorId_resultTupleSchemeFactory();

    public Turno success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Turno.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerTurnoPorId_result.class, metaDataMap);
    }

    public traerTurnoPorId_result() {
    }

    public traerTurnoPorId_result(
      Turno success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerTurnoPorId_result(traerTurnoPorId_result other) {
      if (other.isSetSuccess()) {
        this.success = new Turno(other.success);
      }
    }

    public traerTurnoPorId_result deepCopy() {
      return new traerTurnoPorId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public Turno getSuccess() {
      return this.success;
    }

    public traerTurnoPorId_result setSuccess(Turno success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Turno)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerTurnoPorId_result)
        return this.equals((traerTurnoPorId_result)that);
      return false;
    }

    public boolean equals(traerTurnoPorId_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerTurnoPorId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerTurnoPorId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerTurnoPorId_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnoPorId_resultStandardScheme getScheme() {
        return new traerTurnoPorId_resultStandardScheme();
      }
    }

    private static class traerTurnoPorId_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerTurnoPorId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerTurnoPorId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new Turno();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerTurnoPorId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerTurnoPorId_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnoPorId_resultTupleScheme getScheme() {
        return new traerTurnoPorId_resultTupleScheme();
      }
    }

    private static class traerTurnoPorId_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerTurnoPorId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerTurnoPorId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerTurnoPorId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new Turno();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerTurnosPorFilial_args implements org.apache.thrift.TBase<traerTurnosPorFilial_args, traerTurnosPorFilial_args._Fields>, java.io.Serializable, Cloneable, Comparable<traerTurnosPorFilial_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerTurnosPorFilial_args");

    private static final org.apache.thrift.protocol.TField ID_FILIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("idFilial", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerTurnosPorFilial_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerTurnosPorFilial_argsTupleSchemeFactory();

    public int idFilial; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_FILIAL((short)1, "idFilial");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_FILIAL
            return ID_FILIAL;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __IDFILIAL_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_FILIAL, new org.apache.thrift.meta_data.FieldMetaData("idFilial", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerTurnosPorFilial_args.class, metaDataMap);
    }

    public traerTurnosPorFilial_args() {
    }

    public traerTurnosPorFilial_args(
      int idFilial)
    {
      this();
      this.idFilial = idFilial;
      setIdFilialIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerTurnosPorFilial_args(traerTurnosPorFilial_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.idFilial = other.idFilial;
    }

    public traerTurnosPorFilial_args deepCopy() {
      return new traerTurnosPorFilial_args(this);
    }

    @Override
    public void clear() {
      setIdFilialIsSet(false);
      this.idFilial = 0;
    }

    public int getIdFilial() {
      return this.idFilial;
    }

    public traerTurnosPorFilial_args setIdFilial(int idFilial) {
      this.idFilial = idFilial;
      setIdFilialIsSet(true);
      return this;
    }

    public void unsetIdFilial() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFILIAL_ISSET_ID);
    }

    /** Returns true if field idFilial is set (has been assigned a value) and false otherwise */
    public boolean isSetIdFilial() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFILIAL_ISSET_ID);
    }

    public void setIdFilialIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFILIAL_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_FILIAL:
        if (value == null) {
          unsetIdFilial();
        } else {
          setIdFilial((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_FILIAL:
        return getIdFilial();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_FILIAL:
        return isSetIdFilial();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerTurnosPorFilial_args)
        return this.equals((traerTurnosPorFilial_args)that);
      return false;
    }

    public boolean equals(traerTurnosPorFilial_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idFilial = true;
      boolean that_present_idFilial = true;
      if (this_present_idFilial || that_present_idFilial) {
        if (!(this_present_idFilial && that_present_idFilial))
          return false;
        if (this.idFilial != that.idFilial)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + idFilial;

      return hashCode;
    }

    @Override
    public int compareTo(traerTurnosPorFilial_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdFilial()).compareTo(other.isSetIdFilial());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdFilial()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idFilial, other.idFilial);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerTurnosPorFilial_args(");
      boolean first = true;

      sb.append("idFilial:");
      sb.append(this.idFilial);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerTurnosPorFilial_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnosPorFilial_argsStandardScheme getScheme() {
        return new traerTurnosPorFilial_argsStandardScheme();
      }
    }

    private static class traerTurnosPorFilial_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerTurnosPorFilial_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerTurnosPorFilial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_FILIAL
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.idFilial = iprot.readI32();
                struct.setIdFilialIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerTurnosPorFilial_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ID_FILIAL_FIELD_DESC);
        oprot.writeI32(struct.idFilial);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerTurnosPorFilial_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnosPorFilial_argsTupleScheme getScheme() {
        return new traerTurnosPorFilial_argsTupleScheme();
      }
    }

    private static class traerTurnosPorFilial_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerTurnosPorFilial_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerTurnosPorFilial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdFilial()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetIdFilial()) {
          oprot.writeI32(struct.idFilial);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerTurnosPorFilial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.idFilial = iprot.readI32();
          struct.setIdFilialIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerTurnosPorFilial_result implements org.apache.thrift.TBase<traerTurnosPorFilial_result, traerTurnosPorFilial_result._Fields>, java.io.Serializable, Cloneable, Comparable<traerTurnosPorFilial_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerTurnosPorFilial_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerTurnosPorFilial_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerTurnosPorFilial_resultTupleSchemeFactory();

    public java.util.List<Turno> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Turno.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerTurnosPorFilial_result.class, metaDataMap);
    }

    public traerTurnosPorFilial_result() {
    }

    public traerTurnosPorFilial_result(
      java.util.List<Turno> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerTurnosPorFilial_result(traerTurnosPorFilial_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Turno> __this__success = new java.util.ArrayList<Turno>(other.success.size());
        for (Turno other_element : other.success) {
          __this__success.add(new Turno(other_element));
        }
        this.success = __this__success;
      }
    }

    public traerTurnosPorFilial_result deepCopy() {
      return new traerTurnosPorFilial_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<Turno> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Turno elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Turno>();
      }
      this.success.add(elem);
    }

    public java.util.List<Turno> getSuccess() {
      return this.success;
    }

    public traerTurnosPorFilial_result setSuccess(java.util.List<Turno> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Turno>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerTurnosPorFilial_result)
        return this.equals((traerTurnosPorFilial_result)that);
      return false;
    }

    public boolean equals(traerTurnosPorFilial_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerTurnosPorFilial_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerTurnosPorFilial_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerTurnosPorFilial_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnosPorFilial_resultStandardScheme getScheme() {
        return new traerTurnosPorFilial_resultStandardScheme();
      }
    }

    private static class traerTurnosPorFilial_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerTurnosPorFilial_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerTurnosPorFilial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Turno>(_list0.size);
                  Turno _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = new Turno();
                    _elem1.read(iprot);
                    struct.success.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerTurnosPorFilial_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Turno _iter3 : struct.success)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerTurnosPorFilial_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTurnosPorFilial_resultTupleScheme getScheme() {
        return new traerTurnosPorFilial_resultTupleScheme();
      }
    }

    private static class traerTurnosPorFilial_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerTurnosPorFilial_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerTurnosPorFilial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Turno _iter4 : struct.success)
            {
              _iter4.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerTurnosPorFilial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Turno>(_list5.size);
            Turno _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = new Turno();
              _elem6.read(iprot);
              struct.success.add(_elem6);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerTelefonoPorUsuario_args implements org.apache.thrift.TBase<traerTelefonoPorUsuario_args, traerTelefonoPorUsuario_args._Fields>, java.io.Serializable, Cloneable, Comparable<traerTelefonoPorUsuario_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerTelefonoPorUsuario_args");

    private static final org.apache.thrift.protocol.TField APELLIDO_FIELD_DESC = new org.apache.thrift.protocol.TField("apellido", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerTelefonoPorUsuario_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerTelefonoPorUsuario_argsTupleSchemeFactory();

    public java.lang.String apellido; // required
    public java.lang.String nombre; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      APELLIDO((short)1, "apellido"),
      NOMBRE((short)2, "nombre");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // APELLIDO
            return APELLIDO;
          case 2: // NOMBRE
            return NOMBRE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.APELLIDO, new org.apache.thrift.meta_data.FieldMetaData("apellido", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerTelefonoPorUsuario_args.class, metaDataMap);
    }

    public traerTelefonoPorUsuario_args() {
    }

    public traerTelefonoPorUsuario_args(
      java.lang.String apellido,
      java.lang.String nombre)
    {
      this();
      this.apellido = apellido;
      this.nombre = nombre;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerTelefonoPorUsuario_args(traerTelefonoPorUsuario_args other) {
      if (other.isSetApellido()) {
        this.apellido = other.apellido;
      }
      if (other.isSetNombre()) {
        this.nombre = other.nombre;
      }
    }

    public traerTelefonoPorUsuario_args deepCopy() {
      return new traerTelefonoPorUsuario_args(this);
    }

    @Override
    public void clear() {
      this.apellido = null;
      this.nombre = null;
    }

    public java.lang.String getApellido() {
      return this.apellido;
    }

    public traerTelefonoPorUsuario_args setApellido(java.lang.String apellido) {
      this.apellido = apellido;
      return this;
    }

    public void unsetApellido() {
      this.apellido = null;
    }

    /** Returns true if field apellido is set (has been assigned a value) and false otherwise */
    public boolean isSetApellido() {
      return this.apellido != null;
    }

    public void setApellidoIsSet(boolean value) {
      if (!value) {
        this.apellido = null;
      }
    }

    public java.lang.String getNombre() {
      return this.nombre;
    }

    public traerTelefonoPorUsuario_args setNombre(java.lang.String nombre) {
      this.nombre = nombre;
      return this;
    }

    public void unsetNombre() {
      this.nombre = null;
    }

    /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
    public boolean isSetNombre() {
      return this.nombre != null;
    }

    public void setNombreIsSet(boolean value) {
      if (!value) {
        this.nombre = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case APELLIDO:
        if (value == null) {
          unsetApellido();
        } else {
          setApellido((java.lang.String)value);
        }
        break;

      case NOMBRE:
        if (value == null) {
          unsetNombre();
        } else {
          setNombre((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case APELLIDO:
        return getApellido();

      case NOMBRE:
        return getNombre();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case APELLIDO:
        return isSetApellido();
      case NOMBRE:
        return isSetNombre();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerTelefonoPorUsuario_args)
        return this.equals((traerTelefonoPorUsuario_args)that);
      return false;
    }

    public boolean equals(traerTelefonoPorUsuario_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_apellido = true && this.isSetApellido();
      boolean that_present_apellido = true && that.isSetApellido();
      if (this_present_apellido || that_present_apellido) {
        if (!(this_present_apellido && that_present_apellido))
          return false;
        if (!this.apellido.equals(that.apellido))
          return false;
      }

      boolean this_present_nombre = true && this.isSetNombre();
      boolean that_present_nombre = true && that.isSetNombre();
      if (this_present_nombre || that_present_nombre) {
        if (!(this_present_nombre && that_present_nombre))
          return false;
        if (!this.nombre.equals(that.nombre))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetApellido()) ? 131071 : 524287);
      if (isSetApellido())
        hashCode = hashCode * 8191 + apellido.hashCode();

      hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
      if (isSetNombre())
        hashCode = hashCode * 8191 + nombre.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerTelefonoPorUsuario_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetApellido()).compareTo(other.isSetApellido());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetApellido()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apellido, other.apellido);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNombre()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerTelefonoPorUsuario_args(");
      boolean first = true;

      sb.append("apellido:");
      if (this.apellido == null) {
        sb.append("null");
      } else {
        sb.append(this.apellido);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("nombre:");
      if (this.nombre == null) {
        sb.append("null");
      } else {
        sb.append(this.nombre);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerTelefonoPorUsuario_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTelefonoPorUsuario_argsStandardScheme getScheme() {
        return new traerTelefonoPorUsuario_argsStandardScheme();
      }
    }

    private static class traerTelefonoPorUsuario_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerTelefonoPorUsuario_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerTelefonoPorUsuario_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // APELLIDO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.apellido = iprot.readString();
                struct.setApellidoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // NOMBRE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.nombre = iprot.readString();
                struct.setNombreIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerTelefonoPorUsuario_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.apellido != null) {
          oprot.writeFieldBegin(APELLIDO_FIELD_DESC);
          oprot.writeString(struct.apellido);
          oprot.writeFieldEnd();
        }
        if (struct.nombre != null) {
          oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
          oprot.writeString(struct.nombre);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerTelefonoPorUsuario_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTelefonoPorUsuario_argsTupleScheme getScheme() {
        return new traerTelefonoPorUsuario_argsTupleScheme();
      }
    }

    private static class traerTelefonoPorUsuario_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerTelefonoPorUsuario_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerTelefonoPorUsuario_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetApellido()) {
          optionals.set(0);
        }
        if (struct.isSetNombre()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetApellido()) {
          oprot.writeString(struct.apellido);
        }
        if (struct.isSetNombre()) {
          oprot.writeString(struct.nombre);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerTelefonoPorUsuario_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.apellido = iprot.readString();
          struct.setApellidoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.nombre = iprot.readString();
          struct.setNombreIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerTelefonoPorUsuario_result implements org.apache.thrift.TBase<traerTelefonoPorUsuario_result, traerTelefonoPorUsuario_result._Fields>, java.io.Serializable, Cloneable, Comparable<traerTelefonoPorUsuario_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerTelefonoPorUsuario_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);
    private static final org.apache.thrift.protocol.TField NO_ENCONTRADO_FIELD_DESC = new org.apache.thrift.protocol.TField("noEncontrado", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerTelefonoPorUsuario_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerTelefonoPorUsuario_resultTupleSchemeFactory();

    public java.lang.String success; // required
    public NoEncontrado noEncontrado; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      NO_ENCONTRADO((short)1, "noEncontrado");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // NO_ENCONTRADO
            return NO_ENCONTRADO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.NO_ENCONTRADO, new org.apache.thrift.meta_data.FieldMetaData("noEncontrado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, NoEncontrado.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerTelefonoPorUsuario_result.class, metaDataMap);
    }

    public traerTelefonoPorUsuario_result() {
    }

    public traerTelefonoPorUsuario_result(
      java.lang.String success,
      NoEncontrado noEncontrado)
    {
      this();
      this.success = success;
      this.noEncontrado = noEncontrado;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerTelefonoPorUsuario_result(traerTelefonoPorUsuario_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
      if (other.isSetNoEncontrado()) {
        this.noEncontrado = new NoEncontrado(other.noEncontrado);
      }
    }

    public traerTelefonoPorUsuario_result deepCopy() {
      return new traerTelefonoPorUsuario_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.noEncontrado = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public traerTelefonoPorUsuario_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public NoEncontrado getNoEncontrado() {
      return this.noEncontrado;
    }

    public traerTelefonoPorUsuario_result setNoEncontrado(NoEncontrado noEncontrado) {
      this.noEncontrado = noEncontrado;
      return this;
    }

    public void unsetNoEncontrado() {
      this.noEncontrado = null;
    }

    /** Returns true if field noEncontrado is set (has been assigned a value) and false otherwise */
    public boolean isSetNoEncontrado() {
      return this.noEncontrado != null;
    }

    public void setNoEncontradoIsSet(boolean value) {
      if (!value) {
        this.noEncontrado = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      case NO_ENCONTRADO:
        if (value == null) {
          unsetNoEncontrado();
        } else {
          setNoEncontrado((NoEncontrado)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case NO_ENCONTRADO:
        return getNoEncontrado();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case NO_ENCONTRADO:
        return isSetNoEncontrado();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerTelefonoPorUsuario_result)
        return this.equals((traerTelefonoPorUsuario_result)that);
      return false;
    }

    public boolean equals(traerTelefonoPorUsuario_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_noEncontrado = true && this.isSetNoEncontrado();
      boolean that_present_noEncontrado = true && that.isSetNoEncontrado();
      if (this_present_noEncontrado || that_present_noEncontrado) {
        if (!(this_present_noEncontrado && that_present_noEncontrado))
          return false;
        if (!this.noEncontrado.equals(that.noEncontrado))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetNoEncontrado()) ? 131071 : 524287);
      if (isSetNoEncontrado())
        hashCode = hashCode * 8191 + noEncontrado.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerTelefonoPorUsuario_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNoEncontrado()).compareTo(other.isSetNoEncontrado());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNoEncontrado()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.noEncontrado, other.noEncontrado);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerTelefonoPorUsuario_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("noEncontrado:");
      if (this.noEncontrado == null) {
        sb.append("null");
      } else {
        sb.append(this.noEncontrado);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerTelefonoPorUsuario_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTelefonoPorUsuario_resultStandardScheme getScheme() {
        return new traerTelefonoPorUsuario_resultStandardScheme();
      }
    }

    private static class traerTelefonoPorUsuario_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerTelefonoPorUsuario_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerTelefonoPorUsuario_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // NO_ENCONTRADO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.noEncontrado = new NoEncontrado();
                struct.noEncontrado.read(iprot);
                struct.setNoEncontradoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerTelefonoPorUsuario_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.noEncontrado != null) {
          oprot.writeFieldBegin(NO_ENCONTRADO_FIELD_DESC);
          struct.noEncontrado.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerTelefonoPorUsuario_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerTelefonoPorUsuario_resultTupleScheme getScheme() {
        return new traerTelefonoPorUsuario_resultTupleScheme();
      }
    }

    private static class traerTelefonoPorUsuario_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerTelefonoPorUsuario_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerTelefonoPorUsuario_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetNoEncontrado()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
        if (struct.isSetNoEncontrado()) {
          struct.noEncontrado.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerTelefonoPorUsuario_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.noEncontrado = new NoEncontrado();
          struct.noEncontrado.read(iprot);
          struct.setNoEncontradoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerCanchaPorId_args implements org.apache.thrift.TBase<traerCanchaPorId_args, traerCanchaPorId_args._Fields>, java.io.Serializable, Cloneable, Comparable<traerCanchaPorId_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerCanchaPorId_args");

    private static final org.apache.thrift.protocol.TField ID_CANCHA_FIELD_DESC = new org.apache.thrift.protocol.TField("idCancha", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerCanchaPorId_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerCanchaPorId_argsTupleSchemeFactory();

    public int idCancha; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_CANCHA((short)1, "idCancha");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_CANCHA
            return ID_CANCHA;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __IDCANCHA_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_CANCHA, new org.apache.thrift.meta_data.FieldMetaData("idCancha", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerCanchaPorId_args.class, metaDataMap);
    }

    public traerCanchaPorId_args() {
    }

    public traerCanchaPorId_args(
      int idCancha)
    {
      this();
      this.idCancha = idCancha;
      setIdCanchaIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerCanchaPorId_args(traerCanchaPorId_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.idCancha = other.idCancha;
    }

    public traerCanchaPorId_args deepCopy() {
      return new traerCanchaPorId_args(this);
    }

    @Override
    public void clear() {
      setIdCanchaIsSet(false);
      this.idCancha = 0;
    }

    public int getIdCancha() {
      return this.idCancha;
    }

    public traerCanchaPorId_args setIdCancha(int idCancha) {
      this.idCancha = idCancha;
      setIdCanchaIsSet(true);
      return this;
    }

    public void unsetIdCancha() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCANCHA_ISSET_ID);
    }

    /** Returns true if field idCancha is set (has been assigned a value) and false otherwise */
    public boolean isSetIdCancha() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCANCHA_ISSET_ID);
    }

    public void setIdCanchaIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCANCHA_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_CANCHA:
        if (value == null) {
          unsetIdCancha();
        } else {
          setIdCancha((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_CANCHA:
        return getIdCancha();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_CANCHA:
        return isSetIdCancha();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerCanchaPorId_args)
        return this.equals((traerCanchaPorId_args)that);
      return false;
    }

    public boolean equals(traerCanchaPorId_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idCancha = true;
      boolean that_present_idCancha = true;
      if (this_present_idCancha || that_present_idCancha) {
        if (!(this_present_idCancha && that_present_idCancha))
          return false;
        if (this.idCancha != that.idCancha)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + idCancha;

      return hashCode;
    }

    @Override
    public int compareTo(traerCanchaPorId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdCancha()).compareTo(other.isSetIdCancha());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdCancha()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idCancha, other.idCancha);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerCanchaPorId_args(");
      boolean first = true;

      sb.append("idCancha:");
      sb.append(this.idCancha);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerCanchaPorId_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchaPorId_argsStandardScheme getScheme() {
        return new traerCanchaPorId_argsStandardScheme();
      }
    }

    private static class traerCanchaPorId_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerCanchaPorId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerCanchaPorId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_CANCHA
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.idCancha = iprot.readI32();
                struct.setIdCanchaIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerCanchaPorId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ID_CANCHA_FIELD_DESC);
        oprot.writeI32(struct.idCancha);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerCanchaPorId_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchaPorId_argsTupleScheme getScheme() {
        return new traerCanchaPorId_argsTupleScheme();
      }
    }

    private static class traerCanchaPorId_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerCanchaPorId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerCanchaPorId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdCancha()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetIdCancha()) {
          oprot.writeI32(struct.idCancha);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerCanchaPorId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.idCancha = iprot.readI32();
          struct.setIdCanchaIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerCanchaPorId_result implements org.apache.thrift.TBase<traerCanchaPorId_result, traerCanchaPorId_result._Fields>, java.io.Serializable, Cloneable, Comparable<traerCanchaPorId_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerCanchaPorId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerCanchaPorId_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerCanchaPorId_resultTupleSchemeFactory();

    public Cancha success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Cancha.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerCanchaPorId_result.class, metaDataMap);
    }

    public traerCanchaPorId_result() {
    }

    public traerCanchaPorId_result(
      Cancha success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerCanchaPorId_result(traerCanchaPorId_result other) {
      if (other.isSetSuccess()) {
        this.success = new Cancha(other.success);
      }
    }

    public traerCanchaPorId_result deepCopy() {
      return new traerCanchaPorId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public Cancha getSuccess() {
      return this.success;
    }

    public traerCanchaPorId_result setSuccess(Cancha success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Cancha)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerCanchaPorId_result)
        return this.equals((traerCanchaPorId_result)that);
      return false;
    }

    public boolean equals(traerCanchaPorId_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerCanchaPorId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerCanchaPorId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerCanchaPorId_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchaPorId_resultStandardScheme getScheme() {
        return new traerCanchaPorId_resultStandardScheme();
      }
    }

    private static class traerCanchaPorId_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerCanchaPorId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerCanchaPorId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new Cancha();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerCanchaPorId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerCanchaPorId_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchaPorId_resultTupleScheme getScheme() {
        return new traerCanchaPorId_resultTupleScheme();
      }
    }

    private static class traerCanchaPorId_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerCanchaPorId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerCanchaPorId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerCanchaPorId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new Cancha();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerCanchasPorDeporte_args implements org.apache.thrift.TBase<traerCanchasPorDeporte_args, traerCanchasPorDeporte_args._Fields>, java.io.Serializable, Cloneable, Comparable<traerCanchasPorDeporte_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerCanchasPorDeporte_args");

    private static final org.apache.thrift.protocol.TField DEPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("deporte", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerCanchasPorDeporte_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerCanchasPorDeporte_argsTupleSchemeFactory();

    public java.lang.String deporte; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      DEPORTE((short)1, "deporte");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // DEPORTE
            return DEPORTE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.DEPORTE, new org.apache.thrift.meta_data.FieldMetaData("deporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerCanchasPorDeporte_args.class, metaDataMap);
    }

    public traerCanchasPorDeporte_args() {
    }

    public traerCanchasPorDeporte_args(
      java.lang.String deporte)
    {
      this();
      this.deporte = deporte;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerCanchasPorDeporte_args(traerCanchasPorDeporte_args other) {
      if (other.isSetDeporte()) {
        this.deporte = other.deporte;
      }
    }

    public traerCanchasPorDeporte_args deepCopy() {
      return new traerCanchasPorDeporte_args(this);
    }

    @Override
    public void clear() {
      this.deporte = null;
    }

    public java.lang.String getDeporte() {
      return this.deporte;
    }

    public traerCanchasPorDeporte_args setDeporte(java.lang.String deporte) {
      this.deporte = deporte;
      return this;
    }

    public void unsetDeporte() {
      this.deporte = null;
    }

    /** Returns true if field deporte is set (has been assigned a value) and false otherwise */
    public boolean isSetDeporte() {
      return this.deporte != null;
    }

    public void setDeporteIsSet(boolean value) {
      if (!value) {
        this.deporte = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case DEPORTE:
        if (value == null) {
          unsetDeporte();
        } else {
          setDeporte((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case DEPORTE:
        return getDeporte();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case DEPORTE:
        return isSetDeporte();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerCanchasPorDeporte_args)
        return this.equals((traerCanchasPorDeporte_args)that);
      return false;
    }

    public boolean equals(traerCanchasPorDeporte_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_deporte = true && this.isSetDeporte();
      boolean that_present_deporte = true && that.isSetDeporte();
      if (this_present_deporte || that_present_deporte) {
        if (!(this_present_deporte && that_present_deporte))
          return false;
        if (!this.deporte.equals(that.deporte))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetDeporte()) ? 131071 : 524287);
      if (isSetDeporte())
        hashCode = hashCode * 8191 + deporte.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerCanchasPorDeporte_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetDeporte()).compareTo(other.isSetDeporte());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDeporte()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deporte, other.deporte);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerCanchasPorDeporte_args(");
      boolean first = true;

      sb.append("deporte:");
      if (this.deporte == null) {
        sb.append("null");
      } else {
        sb.append(this.deporte);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerCanchasPorDeporte_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchasPorDeporte_argsStandardScheme getScheme() {
        return new traerCanchasPorDeporte_argsStandardScheme();
      }
    }

    private static class traerCanchasPorDeporte_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerCanchasPorDeporte_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerCanchasPorDeporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // DEPORTE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.deporte = iprot.readString();
                struct.setDeporteIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerCanchasPorDeporte_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.deporte != null) {
          oprot.writeFieldBegin(DEPORTE_FIELD_DESC);
          oprot.writeString(struct.deporte);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerCanchasPorDeporte_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchasPorDeporte_argsTupleScheme getScheme() {
        return new traerCanchasPorDeporte_argsTupleScheme();
      }
    }

    private static class traerCanchasPorDeporte_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerCanchasPorDeporte_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerCanchasPorDeporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetDeporte()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetDeporte()) {
          oprot.writeString(struct.deporte);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerCanchasPorDeporte_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.deporte = iprot.readString();
          struct.setDeporteIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerCanchasPorDeporte_result implements org.apache.thrift.TBase<traerCanchasPorDeporte_result, traerCanchasPorDeporte_result._Fields>, java.io.Serializable, Cloneable, Comparable<traerCanchasPorDeporte_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerCanchasPorDeporte_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerCanchasPorDeporte_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerCanchasPorDeporte_resultTupleSchemeFactory();

    public java.util.List<Cancha> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Cancha.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerCanchasPorDeporte_result.class, metaDataMap);
    }

    public traerCanchasPorDeporte_result() {
    }

    public traerCanchasPorDeporte_result(
      java.util.List<Cancha> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerCanchasPorDeporte_result(traerCanchasPorDeporte_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Cancha> __this__success = new java.util.ArrayList<Cancha>(other.success.size());
        for (Cancha other_element : other.success) {
          __this__success.add(new Cancha(other_element));
        }
        this.success = __this__success;
      }
    }

    public traerCanchasPorDeporte_result deepCopy() {
      return new traerCanchasPorDeporte_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<Cancha> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Cancha elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Cancha>();
      }
      this.success.add(elem);
    }

    public java.util.List<Cancha> getSuccess() {
      return this.success;
    }

    public traerCanchasPorDeporte_result setSuccess(java.util.List<Cancha> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Cancha>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerCanchasPorDeporte_result)
        return this.equals((traerCanchasPorDeporte_result)that);
      return false;
    }

    public boolean equals(traerCanchasPorDeporte_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerCanchasPorDeporte_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerCanchasPorDeporte_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerCanchasPorDeporte_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchasPorDeporte_resultStandardScheme getScheme() {
        return new traerCanchasPorDeporte_resultStandardScheme();
      }
    }

    private static class traerCanchasPorDeporte_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerCanchasPorDeporte_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerCanchasPorDeporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Cancha>(_list8.size);
                  Cancha _elem9;
                  for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                  {
                    _elem9 = new Cancha();
                    _elem9.read(iprot);
                    struct.success.add(_elem9);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerCanchasPorDeporte_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Cancha _iter11 : struct.success)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerCanchasPorDeporte_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerCanchasPorDeporte_resultTupleScheme getScheme() {
        return new traerCanchasPorDeporte_resultTupleScheme();
      }
    }

    private static class traerCanchasPorDeporte_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerCanchasPorDeporte_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerCanchasPorDeporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Cancha _iter12 : struct.success)
            {
              _iter12.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerCanchasPorDeporte_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Cancha>(_list13.size);
            Cancha _elem14;
            for (int _i15 = 0; _i15 < _list13.size; ++_i15)
            {
              _elem14 = new Cancha();
              _elem14.read(iprot);
              struct.success.add(_elem14);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerLocalidadPorFilial_args implements org.apache.thrift.TBase<traerLocalidadPorFilial_args, traerLocalidadPorFilial_args._Fields>, java.io.Serializable, Cloneable, Comparable<traerLocalidadPorFilial_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerLocalidadPorFilial_args");

    private static final org.apache.thrift.protocol.TField ID_FILIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("idFilial", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerLocalidadPorFilial_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerLocalidadPorFilial_argsTupleSchemeFactory();

    public int idFilial; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_FILIAL((short)1, "idFilial");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_FILIAL
            return ID_FILIAL;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __IDFILIAL_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_FILIAL, new org.apache.thrift.meta_data.FieldMetaData("idFilial", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerLocalidadPorFilial_args.class, metaDataMap);
    }

    public traerLocalidadPorFilial_args() {
    }

    public traerLocalidadPorFilial_args(
      int idFilial)
    {
      this();
      this.idFilial = idFilial;
      setIdFilialIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerLocalidadPorFilial_args(traerLocalidadPorFilial_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.idFilial = other.idFilial;
    }

    public traerLocalidadPorFilial_args deepCopy() {
      return new traerLocalidadPorFilial_args(this);
    }

    @Override
    public void clear() {
      setIdFilialIsSet(false);
      this.idFilial = 0;
    }

    public int getIdFilial() {
      return this.idFilial;
    }

    public traerLocalidadPorFilial_args setIdFilial(int idFilial) {
      this.idFilial = idFilial;
      setIdFilialIsSet(true);
      return this;
    }

    public void unsetIdFilial() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFILIAL_ISSET_ID);
    }

    /** Returns true if field idFilial is set (has been assigned a value) and false otherwise */
    public boolean isSetIdFilial() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFILIAL_ISSET_ID);
    }

    public void setIdFilialIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFILIAL_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_FILIAL:
        if (value == null) {
          unsetIdFilial();
        } else {
          setIdFilial((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_FILIAL:
        return getIdFilial();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_FILIAL:
        return isSetIdFilial();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerLocalidadPorFilial_args)
        return this.equals((traerLocalidadPorFilial_args)that);
      return false;
    }

    public boolean equals(traerLocalidadPorFilial_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idFilial = true;
      boolean that_present_idFilial = true;
      if (this_present_idFilial || that_present_idFilial) {
        if (!(this_present_idFilial && that_present_idFilial))
          return false;
        if (this.idFilial != that.idFilial)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + idFilial;

      return hashCode;
    }

    @Override
    public int compareTo(traerLocalidadPorFilial_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdFilial()).compareTo(other.isSetIdFilial());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdFilial()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idFilial, other.idFilial);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerLocalidadPorFilial_args(");
      boolean first = true;

      sb.append("idFilial:");
      sb.append(this.idFilial);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerLocalidadPorFilial_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerLocalidadPorFilial_argsStandardScheme getScheme() {
        return new traerLocalidadPorFilial_argsStandardScheme();
      }
    }

    private static class traerLocalidadPorFilial_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerLocalidadPorFilial_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerLocalidadPorFilial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_FILIAL
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.idFilial = iprot.readI32();
                struct.setIdFilialIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerLocalidadPorFilial_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ID_FILIAL_FIELD_DESC);
        oprot.writeI32(struct.idFilial);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerLocalidadPorFilial_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerLocalidadPorFilial_argsTupleScheme getScheme() {
        return new traerLocalidadPorFilial_argsTupleScheme();
      }
    }

    private static class traerLocalidadPorFilial_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerLocalidadPorFilial_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerLocalidadPorFilial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdFilial()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetIdFilial()) {
          oprot.writeI32(struct.idFilial);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerLocalidadPorFilial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.idFilial = iprot.readI32();
          struct.setIdFilialIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class traerLocalidadPorFilial_result implements org.apache.thrift.TBase<traerLocalidadPorFilial_result, traerLocalidadPorFilial_result._Fields>, java.io.Serializable, Cloneable, Comparable<traerLocalidadPorFilial_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("traerLocalidadPorFilial_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);
    private static final org.apache.thrift.protocol.TField CAMPO_VACIO_FIELD_DESC = new org.apache.thrift.protocol.TField("campoVacio", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new traerLocalidadPorFilial_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new traerLocalidadPorFilial_resultTupleSchemeFactory();

    public java.lang.String success; // required
    public CampoVacio campoVacio; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      CAMPO_VACIO((short)1, "campoVacio");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // CAMPO_VACIO
            return CAMPO_VACIO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CAMPO_VACIO, new org.apache.thrift.meta_data.FieldMetaData("campoVacio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CampoVacio.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(traerLocalidadPorFilial_result.class, metaDataMap);
    }

    public traerLocalidadPorFilial_result() {
    }

    public traerLocalidadPorFilial_result(
      java.lang.String success,
      CampoVacio campoVacio)
    {
      this();
      this.success = success;
      this.campoVacio = campoVacio;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public traerLocalidadPorFilial_result(traerLocalidadPorFilial_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
      if (other.isSetCampoVacio()) {
        this.campoVacio = new CampoVacio(other.campoVacio);
      }
    }

    public traerLocalidadPorFilial_result deepCopy() {
      return new traerLocalidadPorFilial_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.campoVacio = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public traerLocalidadPorFilial_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public CampoVacio getCampoVacio() {
      return this.campoVacio;
    }

    public traerLocalidadPorFilial_result setCampoVacio(CampoVacio campoVacio) {
      this.campoVacio = campoVacio;
      return this;
    }

    public void unsetCampoVacio() {
      this.campoVacio = null;
    }

    /** Returns true if field campoVacio is set (has been assigned a value) and false otherwise */
    public boolean isSetCampoVacio() {
      return this.campoVacio != null;
    }

    public void setCampoVacioIsSet(boolean value) {
      if (!value) {
        this.campoVacio = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      case CAMPO_VACIO:
        if (value == null) {
          unsetCampoVacio();
        } else {
          setCampoVacio((CampoVacio)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case CAMPO_VACIO:
        return getCampoVacio();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case CAMPO_VACIO:
        return isSetCampoVacio();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof traerLocalidadPorFilial_result)
        return this.equals((traerLocalidadPorFilial_result)that);
      return false;
    }

    public boolean equals(traerLocalidadPorFilial_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_campoVacio = true && this.isSetCampoVacio();
      boolean that_present_campoVacio = true && that.isSetCampoVacio();
      if (this_present_campoVacio || that_present_campoVacio) {
        if (!(this_present_campoVacio && that_present_campoVacio))
          return false;
        if (!this.campoVacio.equals(that.campoVacio))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetCampoVacio()) ? 131071 : 524287);
      if (isSetCampoVacio())
        hashCode = hashCode * 8191 + campoVacio.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(traerLocalidadPorFilial_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCampoVacio()).compareTo(other.isSetCampoVacio());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCampoVacio()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.campoVacio, other.campoVacio);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("traerLocalidadPorFilial_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("campoVacio:");
      if (this.campoVacio == null) {
        sb.append("null");
      } else {
        sb.append(this.campoVacio);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class traerLocalidadPorFilial_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerLocalidadPorFilial_resultStandardScheme getScheme() {
        return new traerLocalidadPorFilial_resultStandardScheme();
      }
    }

    private static class traerLocalidadPorFilial_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<traerLocalidadPorFilial_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, traerLocalidadPorFilial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // CAMPO_VACIO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.campoVacio = new CampoVacio();
                struct.campoVacio.read(iprot);
                struct.setCampoVacioIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, traerLocalidadPorFilial_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.campoVacio != null) {
          oprot.writeFieldBegin(CAMPO_VACIO_FIELD_DESC);
          struct.campoVacio.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class traerLocalidadPorFilial_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public traerLocalidadPorFilial_resultTupleScheme getScheme() {
        return new traerLocalidadPorFilial_resultTupleScheme();
      }
    }

    private static class traerLocalidadPorFilial_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<traerLocalidadPorFilial_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, traerLocalidadPorFilial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetCampoVacio()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
        if (struct.isSetCampoVacio()) {
          struct.campoVacio.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, traerLocalidadPorFilial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.campoVacio = new CampoVacio();
          struct.campoVacio.read(iprot);
          struct.setCampoVacioIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
